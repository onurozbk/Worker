// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Worker.DataAccess.Concrete.EntityFramework;

namespace Worker.DataAccess.Migrations
{
    [DbContext(typeof(WorkerContext))]
    [Migration("20190704102412_initalcerate")]
    partial class initalcerate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Worker.Entities.Concrete.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityBarcode");

                    b.Property<short>("ActivityPriority");

                    b.Property<short>("ActivityStatusId");

                    b.Property<short>("ActivityTypeId");

                    b.Property<string>("ActivitytDescription");

                    b.Property<short>("ActivitytOptionsId");

                    b.Property<short>("ActivitytSatusId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CreatedUser");

                    b.Property<int>("CustomerId");

                    b.Property<bool>("IsActive");

                    b.Property<int>("RelatedUser");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("UpdatedUser");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Worker.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Worker.Entities.Concrete.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("CellPhone");

                    b.Property<int>("CityId");

                    b.Property<int>("CreateUser");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<short>("CustomerGroupId");

                    b.Property<string>("CustomerLogo");

                    b.Property<string>("CustomerName");

                    b.Property<string>("FaxNumber");

                    b.Property<string>("Mail");

                    b.Property<string>("Phone");

                    b.Property<string>("RelatedPerson");

                    b.Property<string>("TaxCenter");

                    b.Property<string>("TaxNumber");

                    b.Property<int>("TownId");

                    b.Property<int>("UpdateUser");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPassword");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Worker.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("ProductName");

                    b.Property<short>("UnitInStock");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Worker.Entities.Concrete.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("CellPhone");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("CreateUserId");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Mail");

                    b.Property<string>("NameSurname");

                    b.Property<string>("Password");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<int>("UpdateUserId");

                    b.Property<string>("UserName");

                    b.Property<short>("UserType");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Worker.Entities.Concrete.WebSettings", b =>
                {
                    b.Property<int>("WebSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityAddedTemplate");

                    b.Property<string>("CustomerAddedTemplate");

                    b.Property<string>("MailTemplate");

                    b.Property<string>("SmptAdress");

                    b.Property<string>("SmtpMail");

                    b.Property<string>("SmtpPassword");

                    b.Property<string>("SmtpPort");

                    b.Property<bool>("SmtpSSL");

                    b.HasKey("WebSettingsId");

                    b.ToTable("WebSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
